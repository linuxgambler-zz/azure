{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmSku": {
            "defaultValue": "Standard_D1",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "type": "String",
            "metadata": {
                "description": "Size of VMs in the VM Scale Set."
            }
        },
        "existingVirtualNetworkResourceGroup": {
       "type": "string",
       "metadata": {
         "description": "The name of the Resource Group which contains the existing Virtual Network that this VM Scale Set will be connected to."
       }
     },
        "vmssName": {
            "minLength": 3,
            "maxLength": 61,
            "type": "String",
            "metadata": {
                "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
            }
        },
        "vnetName": {
            "type": "String",
            "metadata": {
                "description": "New or existing VNET name."
            }
        },
        "subName": {
            "type": "String",
            "metadata": {
                "description": "Existing subnet name."
            }
        },
        "capacity": {
            "defaultValue": 2,
            "maxValue": 20,
            "type": "Int",
            "metadata": {
                "description": "Number of VM instances (20 or less)."
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "minLength": 12,
            "type": "SecureString",
            "metadata": {
                "description": "Admin password on all VMs. It must be at least 12 characters in length."
            }
        },
        "sourceImageVhdUri": {
            "type": "String",
            "metadata": {
                "description": "The source of the blob containing the custom image, must be in the same region of the deployment."
            }
        },
        "_artifactsLocation": {
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-linux-customimage-autoscale",
            "type": "String",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            }
        }
    },
    "variables": {
        "vmssuniqueName": "[toLower(substring(concat(substring(parameters('vmssName'),0,6), uniqueString(resourceGroup().id)), 0, 9))]",
        "vmssaccountType": "Standard_LRS",
        "vmssnewAccountSuffix": "[concat(replace(variables('vmssuniqueName'),'-',''), 'sa')]",
        "vmssstorageAccounts": [
            "[concat(uniqueString(concat(variables('vmssnewAccountSuffix'), '0')))]",
            "[concat(uniqueString(concat(variables('vmssnewAccountSuffix'), '1')))]",
            "[concat(uniqueString(concat(variables('vmssnewAccountSuffix'), '2')))]",
            "[concat(uniqueString(concat(variables('vmssnewAccountSuffix'), '3')))]",
            "[concat(uniqueString(concat(variables('vmssnewAccountSuffix'), '4')))]"
        ],
        "vmsssaCount": "[length(variables('vmssstorageAccounts'))]",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetName": "[concat(variables('virtualNetworkName'), '/subnets/', parameters('subName'))]",
        "lbName": "[concat(variables('vmssuniqueName'), 'lb')]",
        "bepoolName": "[concat(variables('lbName'), 'bepool')]",
        "fepoolName": "[concat(variables('lbName'), 'fepool')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "bepoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('bepoolName'))]",
        "feIpConfigName": "[concat(variables('fepoolName'), 'IpConfig')]",
        "feIpConfigId": "[concat(variables('lbID'),'/frontendIPConfigurations/', variables('feIpConfigName'))]",
        "pipName": "[concat(variables('vmssuniqueName'), 'pip')]",
        "nicName": "[concat(variables('vmssuniqueName'), 'nic')]",
        "natPoolName": "[concat(variables('lbName'), 'natpool')]",
        "ipConfigName": "[concat(variables('vmssuniqueName'), 'ipconfig')]",
        "httpProbeName": "httpProbe",
        "httpsProbeName": "httpsProbe",
        "quote": "'"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(variables('vmssStorageAccounts')[copyIndex()], variables('vmssnewAccountSuffix'))]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "storageLoop",
                "count": "[variables('vmsssaCount')]"
            },
            "properties": {
                "accountType": "[variables('vmssaccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('pipName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('vmssuniqueName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Load Balancer"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('feIpConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bepoolName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('natPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('feIpConfigId')]"
                            },
                            "protocol": "tcp",
                            "frontendPortRangeStart": 10022,
                            "frontendPortRangeEnd": 11022,
                            "backendPort": 22
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "HTTPRule",
                        "properties": {
                            "loadDistribution": "Default",
                            "frontendIPConfiguration": {
                                "id": "[variables('feIpConfigId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('bepoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('lbId'), '/probes/', variables('httpProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "HTTPSRule",
                        "properties": {
                            "loadDistribution": "Default",
                            "frontendIPConfiguration": {
                                "id": "[variables('feIpConfigId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('bepoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('httpsProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('httpProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "[variables('httpsProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('capacity')]"
            },
            "name": "[variables('vmssuniqueName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "name": "vmssosdisk",
                            "caching": "ReadWrite",
                            "createOption": "FromImage",
                            "osType": "Linux",
                            "image": {
                                "uri": "[parameters('sourceImageVhdUri')]"
                            }
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmssuniqueName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetName')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('bePoolName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatPools/', variables('natPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "type": "Microsoft.Compute/virtualMachines/extensions",
                                "name": "[concat(parameters('vmssName'),'-LinuxCustomScriptExtension')]",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "commandToExecute": "sh /test.sh",
                                        "enableInternalDNSCheck": "false"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "storageLoop",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "name": "autoscalesettings",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "autoscalesettings",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssuniqueName'))]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "2",
                            "maximum": "20",
                            "default": "[parameters('capacity')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssuniqueName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 40
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/',variables('vmssuniqueName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 30
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssuniqueName'))]"
            ]
        }
    ],
    "outputs": {
        "fqdn": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('pipName')),'2016-03-30').dnsSettings.fqdn]"
        }
    }
}               
